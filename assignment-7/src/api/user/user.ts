/**
 * Generated by orval v6.19.1 🍺
 * Do not edit manually.
 * Swagger API
 * This is a swagger for API.
 * OpenAPI spec version: 1.0
 */
import useSwr from 'swr';
import type { Key, SWRConfiguration } from 'swr';
import type {
  ErrorResponse,
  MeResponse,
  MessageResponse,
  UpdatePasswordRequest,
  UpdateUserRequest,
  UserResponse,
} from '../model';
import { requester } from '../mutator/requester';

/**
 * Retrieve my information
 * @summary Retrieve my information
 */
export const getMe = () => {
  return requester<MeResponse>({ url: `/me`, method: 'get' });
};

export const getGetMeKey = () => [`/me`] as const;

export type GetMeQueryResult = NonNullable<Awaited<ReturnType<typeof getMe>>>;
export type GetMeQueryError = ErrorResponse;

/**
 * @summary Retrieve my information
 */
export const useGetMe = <TError = ErrorResponse>(options?: {
  swr?: SWRConfiguration<Awaited<ReturnType<typeof getMe>>, TError> & {
    swrKey?: Key;
    enabled?: boolean;
  };
}) => {
  const { swr: swrOptions } = options ?? {};

  const isEnabled = swrOptions?.enabled !== false;
  const swrKey =
    swrOptions?.swrKey ?? (() => (isEnabled ? getGetMeKey() : null));
  const swrFn = () => getMe();

  const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(
    swrKey,
    swrFn,
    swrOptions,
  );

  return {
    swrKey,
    ...query,
  };
};

/**
 * Update user
 * @summary Update user
 */
export const updateUser = (updateUserRequest: UpdateUserRequest) => {
  return requester<UserResponse>({
    url: `/users`,
    method: 'put',
    headers: { 'Content-Type': 'application/json' },
    data: updateUserRequest,
  });
};

/**
 * Update user's password
 * @summary Update user's password
 */
export const updatePassword = (
  updatePasswordRequest: UpdatePasswordRequest,
) => {
  return requester<MessageResponse>({
    url: `/users/password`,
    method: 'put',
    headers: { 'Content-Type': 'application/json' },
    data: updatePasswordRequest,
  });
};
