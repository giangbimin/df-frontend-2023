/**
 * Generated by orval v6.19.1 🍺
 * Do not edit manually.
 * Swagger API
 * This is a swagger for API.
 * OpenAPI spec version: 1.0
 */
import useSwr from 'swr';
import type { Key, SWRConfiguration } from 'swr';
import type { ErrorResponse, TopicsResponse } from '../model';
import { requester } from '../mutator/requester';

/**
 * Get all topics
 * @summary Get all topics
 */
export const getTopics = () => {
  return requester<TopicsResponse>({ url: `/topics`, method: 'get' });
};

export const getGetTopicsKey = () => [`/topics`] as const;

export type GetTopicsQueryResult = NonNullable<
  Awaited<ReturnType<typeof getTopics>>
>;
export type GetTopicsQueryError = ErrorResponse;

/**
 * @summary Get all topics
 */
export const useGetTopics = <TError = ErrorResponse>(options?: {
  swr?: SWRConfiguration<Awaited<ReturnType<typeof getTopics>>, TError> & {
    swrKey?: Key;
    enabled?: boolean;
  };
}) => {
  const { swr: swrOptions } = options ?? {};

  const isEnabled = swrOptions?.enabled !== false;
  const swrKey =
    swrOptions?.swrKey ?? (() => (isEnabled ? getGetTopicsKey() : null));
  const swrFn = () => getTopics();

  const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(
    swrKey,
    swrFn,
    swrOptions,
  );

  return {
    swrKey,
    ...query,
  };
};
